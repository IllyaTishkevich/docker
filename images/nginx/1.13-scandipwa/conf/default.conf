upstream fastcgi_backend {
  server unix:/sock/docker.sock;
}

server {
  listen 8081;
  set $MAGE_ROOT /var/www/html;
  include /var/www/html/nginx[.]conf.sample;
}

server {
  listen 3003;

  add_header Access-Control-Allow-Origin '*';
#  add_header Access-Control-Allow-Origin $http_origin;
  add_header Vary 'Origin';
  add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
  add_header Access-Control-Allow-Headers $http_access_control_request_headers;

  location / {
    proxy_pass  http://nodejs:3003/;
    proxy_ssl_server_name on;
    proxy_set_header Host              $http_host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_pass_header Sec-Websocket-Extensions;
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_read_timeout 600s;
  }

  location ~* /graphql {
    proxy_pass http://varnish:80;
    proxy_set_header Host              $http_host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_ssl_server_name on;
    proxy_redirect off;
    proxy_read_timeout 600s;
  }
}

server {
  listen 8443 ssl;

  ssl_certificate /etc/nginx/certs/server_crt.pem;
  ssl_certificate_key /etc/nginx/certs/server_key.pem;
  ssl_trusted_certificate /etc/nginx/certs/scandipwa-fullchain.pem;

  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # intermediate configuration. tweak to your needs.
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;

  add_header Access-Control-Allow-Origin '*';
#  add_header Access-Control-Allow-Origin $http_origin;
  add_header Vary 'Origin';
  add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
  add_header Access-Control-Allow-Headers $http_access_control_request_headers;

  location / {
    proxy_pass http://varnish:80;
    proxy_ssl_server_name on;
    proxy_set_header Host              $http_host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_pass_header Sec-Websocket-Extensions;
    proxy_redirect off;
    proxy_read_timeout 600s;
  }

  location ~* /graphql {
    proxy_pass http://varnish:80;
    proxy_set_header Host              $http_host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_ssl_server_name on;
    proxy_redirect off;
    proxy_read_timeout 600s;
  }

  location ~* /(static|media|admin) {
    proxy_pass http://varnish:80;
    proxy_set_header Host              $http_host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_ssl_server_name on;
    proxy_redirect off;
    proxy_read_timeout 600s;
  }
}
